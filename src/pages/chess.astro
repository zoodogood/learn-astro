---
// @ts-check
import { ClassicChess } from "@lib/ClassicChess.js";
import { Pawn } from "@lib/chess-pieces/pawn.js";
import { CellsWatcher, PieceOffensiveDirection } from "@lib/ChessGame.js";
import Page from "@/layouts/Page.astro";

const game = new ClassicChess();
game.init();
const generator = new CellsWatcher()
  .setGame(game)
  .watchGenerator(ClassicChess.cellsWatcherDefaultStrategy);
const cells = [...generator];

const pawn = new Pawn();
Object.assign(pawn, {
  position: [4, 4],
  offensiveDirection: PieceOffensiveDirection.Left,
});
game.onAddPiece({ piece: pawn });
---

<Page>
  <style>
    span {
      white-space: pre;
    }
    .board {
      font-family: monospace;
      white-space: pre;
      width: 12em;
      display: flex;
      flex-wrap: wrap;
    }

    element-cell {
      display: inline-block;
      width: 1.5em;
      height: 1.5em;
    }
  </style>
  <span>
    {JSON.stringify(game, null, 2)}
  </span>
  <section>
    <h3>Board</h3>
    <p>0 - Просто клетка; 2 - Сама пешка; 1 - то, куда она может сходить.</p>
    <section class="board">
      {
        (() => {
          const symbols = cells.map(([x, y]) =>
            game.positions.has([x, y].toString())
              ? 2
              : pawn.canMovedTo(x, y, game)
                ? 1
                : 0,
          );
          return symbols.map((char) => <element-cell>{char}</element-cell>);
        })()
      }
    </section>
  </section>
</Page>
